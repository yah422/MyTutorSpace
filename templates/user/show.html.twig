{% extends 'base.html.twig' %}

{% block title %}Profil{% endblock %}

{% block body %}
<div class="min-h-screen flex items-center justify-center bg-[#1B4255] flex-col gap-7.5">
        <!-- Flash Messages -->
        {# {% for label, messages in app.session.flashBag.all() %}
        <div
                class="p-4 rounded-lg mb-4 font-bold text-black {% if label == 'success' %}bg-teal-500 border-teal-700{% elseif label == 'warning' %}bg-yellow-400 border-yellow-600{% elseif label == 'error' %}bg-red-500 border-red-700{% endif %}">
                {% for message in messages %}
                {{ message }}
                {% endfor %}
        </div>
        {% endfor %} #}


        <div class="container mx-auto max-w-4xl p-6 rounded-lg shadow-lg bg-[#567C8D]">
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6 items-center">
                        <!-- Section gauche : Photo de profil -->
                        <div class="flex flex-col items-center">
                                <img src="{{ user.profilePicture 
                ? asset('uploads/avatars/' ~ user.profilePicture) 
                : asset('uploads/avatars/default-profile.png') }}"
                                        alt="Photo de profil de {{ user.prenom }} {{ user.nom }}"
                                        class="w-[200px] h-[200px] object-cover rounded-full shadow-md">
                                <h2 class="text-2xl md:text-3xl font-extrabold mt-4 text-center text-[#FFD700]">
                                        {{ user.prenom }} {{ user.nom }}
                                </h2>
                                {% if user.roles is defined and 'ROLE_TUTEUR' in user.roles %}
                                <span
                                        class="px-3 py-1 text-sm font-semibold bg-[#70F9D9] text-[#1B4255] rounded-full mt-2">
                                        Tuteur
                                </span>
                                {% endif %}
                        </div>

                        <!-- Section droite : Informations utilisateur -->
                        <div class="space-y-6">
                                <div class="space-y-4">
                                        <p class="text-gray-300 text-base md:text-lg">
                                                <span class="font-bold">Email :</span>
                                                {% if is_granted('ROLE_ADMIN') or app.user and app.user.id == user.id %}
                                                {{ user.email }}
                                                {% else %}
                                                <span class="italic">Information privée :</span>
                                                {% endif %}
                                        </p>
                                        <p class=" flex justify-start text-gray-300 text-base md:text-lg">
                                                <span class="font-bold">À propos :</span>
                                        </p>
                                        <p class=" flex justify-center text-justify text-gray-300 text-sm md:text-base">
                                                {{ user.aboutMe | default("Aucune information disponible.") }}
                                        </p>
                                        {# Vérifier les rôles avant d'afficher le taux horaire #}
                                        {% if not (is_granted('ROLE_PARENT') or is_granted('ROLE_ELEVE') or
                                        is_granted('ROLE_ADMIN'))%}
                                        <div>
                                                <p class="text-gray-300 text-base md:text-lg">Taux horaire :</p>
                                                <p class="text-gray-300 font-medium">{{ user.hourlyRate }}€/h</p>
                                        </div>
                                        {% endif %}
                                </div>

                                <!-- Actions avec restrictions d'accès -->
                                <div class="space-y-3">
                                        {% if app.user and app.user.id == user.id %}
                                        <a href="{{ path('edit_user', { id: user.id }) }}"
                                                class="block w-full text-center py-2 text-sm md:text-base font-bold rounded bg-[#FFD700] text-[#1B4255] hover:bg-[#70F9D9] transition-colors duration-300">
                                                Modifier mon profil
                                        </a>
                                        <a href="{{ path('app_dashboard') }}"
                                                class="block w-full text-center py-2 text-sm md:text-base font-bold rounded bg-[#70F9D9] text-[#1B4255] hover:bg-[#FFD700] transition-colors duration-300">
                                                Mon tableau de bord
                                        </a>
                                        {% elseif app.user and 'ROLE_ADMIN' in app.user.roles %}
                                        <a href="{{ path('edit_user', { id: user.id }) }}"
                                                class="block w-full text-center py-2 text-sm md:text-base font-bold rounded bg-[#FFD700] text-[#1B4255] hover:bg-[#70F9D9] transition-colors duration-300">
                                                Modifier le profil (Admin)
                                        </a>
                                        {% endif %}
                                        <div class="flex flex-row justify-between space-x-[10px]">
                                                {% if app.user and app.user != user %}
                                                <a href="{{ path('new_message') }}"
                                                        class="block w-full text-center py-2 text-sm md:text-base font-bold rounded bg-[#70F9D9] text-[#1B4255] hover:bg-[#FFD700] transition-colors duration-300">
                                                        Contacter le tuteur
                                                </a>
                                                <button class="save-profile-btn" data-id="{{ user.id }}"
                                                        data-url="{{ path('app_save_profile', { id: user.id }) }}">
                                                        <img src="{{ asset('img/save.png') }}" alt="saveImage">
                                                </button>
                                                {% endif %}
                                        </div>
                                        {% if app.user and 'ROLE_ELEVE' and 'ROLE_PARENT' in app.user.roles %}
                                        <a href="{{ path('app_booking', { tuteur: user.id }) }}"
                                                class="block w-full text-center py-2 text-sm md:text-base font-bold rounded bg-[#FFD700] text-[#1B4255] hover:bg-[#70F9D9] transition-colors duration-300">
                                                Réserver une séance
                                        </a>
                                        {% endif %}
                                </div>
                        </div>
                </div>

        </div>

</div>
<script>
        // Je sélectionne tous les boutons ayant la classe 'save-profile-btn'
        document.querySelectorAll('.save-profile-btn').forEach(button => {

                // Je récupère l'élément image à l'intérieur du bouton
                const img = button.querySelector('img');

                // Je récupère l'ID de l'utilisateur à partir de l'attribut data-id du bouton
                const userId = button.dataset.id;

                // Je récupère l'URL de sauvegarde à partir de l'attribut data-url du bouton
                const url = button.dataset.url;

                // Je définis une clé unique pour stocker l'état de sauvegarde de ce profil dans le localStorage
                const savedKey = 'profileSaved_' + userId;

                // Je vérifie si ce profil a déjà été sauvegardé en consultant le localStorage
                if (localStorage.getItem(savedKey) === 'true') {
                        // Si oui, je mets à jour l'image pour afficher l'icône de profil sauvegardé
                        img.src = "{{ asset('img/saved-icon.png') }}";
                        img.alt = "Profil sauvegardé";
                }

                // J'ajoute un événement au clic sur le bouton
                button.addEventListener('click', () => {
                        // Je vérifie si le profil est déjà sauvegardé dans le localStorage
                        const isSaved = localStorage.getItem(savedKey) === 'true';

                        // J'envoie une requête POST à l'URL pour sauvegarder ou supprimer le profil
                        fetch(url, {
                                method: 'POST',
                                headers: {
                                        'X-Requested-With': 'XMLHttpRequest', // Je précise que la requête est envoyée via AJAX
                                        'Content-Type': 'application/json' // J'indique que le contenu de la requête est au format JSON
                                }
                        })
                                .then(response => response.json()) // Je convertis la réponse en JSON
                                .then(data => {
                                        // Si l'action a réussi
                                        if (data.success) {
                                                if (!isSaved) {
                                                        // Si le profil n'était pas sauvegardé, je change l'image pour montrer qu'il l'est maintenant
                                                        img.src = "{{ asset('img/saved-icon.png') }}";
                                                        img.alt = "Profil sauvegardé";

                                                        // Je mets à jour le localStorage pour conserver l'état sauvegardé
                                                        localStorage.setItem(savedKey, 'true');
                                                } else {
                                                        // Si le profil était déjà sauvegardé, je remets l'image de base
                                                        img.src = "{{ asset('img/save.png') }}";
                                                        img.alt = "Sauvegarder le profil";

                                                        // Je supprime l'état de sauvegarde du localStorage
                                                        localStorage.removeItem(savedKey);
                                                }
                                        } else {
                                                // Si une erreur s'est produite, j'affiche un message d'alerte
                                                alert(data.message);
                                        }
                                })
                                .catch(error => console.error('Erreur lors de la sauvegarde :', error)); // Je gère les erreurs en les affichant dans la console
                });
        });
</script>

{% endblock %}